/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.job.opening.service.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Descriptiveinfo service. Represents a row in the &quot;rms_Descriptiveinfo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.job.opening.service.model.impl.DescriptiveinfoModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.job.opening.service.model.impl.DescriptiveinfoImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Descriptiveinfo
 * @generated
 */
@ProviderType
public interface DescriptiveinfoModel extends BaseModel<Descriptiveinfo> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a descriptiveinfo model instance should use the {@link Descriptiveinfo} interface instead.
	 */

	/**
	 * Returns the primary key of this descriptiveinfo.
	 *
	 * @return the primary key of this descriptiveinfo
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this descriptiveinfo.
	 *
	 * @param primaryKey the primary key of this descriptiveinfo
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this descriptiveinfo.
	 *
	 * @return the uuid of this descriptiveinfo
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this descriptiveinfo.
	 *
	 * @param uuid the uuid of this descriptiveinfo
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the descriptive ID of this descriptiveinfo.
	 *
	 * @return the descriptive ID of this descriptiveinfo
	 */
	public long getDescriptiveId();

	/**
	 * Sets the descriptive ID of this descriptiveinfo.
	 *
	 * @param descriptiveId the descriptive ID of this descriptiveinfo
	 */
	public void setDescriptiveId(long descriptiveId);

	/**
	 * Returns the job ID of this descriptiveinfo.
	 *
	 * @return the job ID of this descriptiveinfo
	 */
	public long getJobId();

	/**
	 * Sets the job ID of this descriptiveinfo.
	 *
	 * @param jobId the job ID of this descriptiveinfo
	 */
	public void setJobId(long jobId);

	/**
	 * Returns the job description of this descriptiveinfo.
	 *
	 * @return the job description of this descriptiveinfo
	 */
	@AutoEscape
	public String getJobDescription();

	/**
	 * Sets the job description of this descriptiveinfo.
	 *
	 * @param jobDescription the job description of this descriptiveinfo
	 */
	public void setJobDescription(String jobDescription);

	/**
	 * Returns the requirements of this descriptiveinfo.
	 *
	 * @return the requirements of this descriptiveinfo
	 */
	@AutoEscape
	public String getRequirements();

	/**
	 * Sets the requirements of this descriptiveinfo.
	 *
	 * @param requirements the requirements of this descriptiveinfo
	 */
	public void setRequirements(String requirements);

	/**
	 * Returns the benefits of this descriptiveinfo.
	 *
	 * @return the benefits of this descriptiveinfo
	 */
	@AutoEscape
	public String getBenefits();

	/**
	 * Sets the benefits of this descriptiveinfo.
	 *
	 * @param benefits the benefits of this descriptiveinfo
	 */
	public void setBenefits(String benefits);

	@Override
	public Descriptiveinfo cloneWithOriginalValues();

}