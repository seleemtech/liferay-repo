/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.rigistration.service.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Register service. Represents a row in the &quot;RG_Register&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.rigistration.service.model.impl.RegisterModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.rigistration.service.model.impl.RegisterImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Register
 * @generated
 */
@ProviderType
public interface RegisterModel extends BaseModel<Register> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a register model instance should use the {@link Register} interface instead.
	 */

	/**
	 * Returns the primary key of this register.
	 *
	 * @return the primary key of this register
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this register.
	 *
	 * @param primaryKey the primary key of this register
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this register.
	 *
	 * @return the uuid of this register
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this register.
	 *
	 * @param uuid the uuid of this register
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the register ID of this register.
	 *
	 * @return the register ID of this register
	 */
	public long getRegisterId();

	/**
	 * Sets the register ID of this register.
	 *
	 * @param registerId the register ID of this register
	 */
	public void setRegisterId(long registerId);

	/**
	 * Returns the first name of this register.
	 *
	 * @return the first name of this register
	 */
	@AutoEscape
	public String getFirstName();

	/**
	 * Sets the first name of this register.
	 *
	 * @param firstName the first name of this register
	 */
	public void setFirstName(String firstName);

	/**
	 * Returns the phone of this register.
	 *
	 * @return the phone of this register
	 */
	public long getPhone();

	/**
	 * Sets the phone of this register.
	 *
	 * @param phone the phone of this register
	 */
	public void setPhone(long phone);

	/**
	 * Returns the user name of this register.
	 *
	 * @return the user name of this register
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this register.
	 *
	 * @param userName the user name of this register
	 */
	public void setUserName(String userName);

	/**
	 * Returns the password of this register.
	 *
	 * @return the password of this register
	 */
	@AutoEscape
	public String getPassword();

	/**
	 * Sets the password of this register.
	 *
	 * @param password the password of this register
	 */
	public void setPassword(String password);

	@Override
	public Register cloneWithOriginalValues();

}